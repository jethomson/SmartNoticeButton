<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
  <meta http-equiv="Cache-Control" content="private, no-store" />
  <title>File Manager</title>
  <style>
  html {
    touch-action: manipulation
    overflow: auto;
  }

  body {
    font-family: Arial, sans-serif;
    color: #faffff;
    background: #111;
    font-size: 17px;
    text-align: center;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
  }

  #return_main_menu {
    float: left;
  }

  .grid-container {
    display: grid;
    width: 95vw;
    max-width: 600px;
    max-height: 800px;
    align-items: center;
    margin: 0 auto;
  }
  .grid-checkbox-row {
    text-align: left;
    width: 100%;
    display: block;
    white-space: nowrap;
  }
  .grid-item-button {
    font-weight: bold;
    text-align: center;
    width: 100%;
    align-items: center;
  }
  .grid-item:active {
    background: #0e70a4;
  }
  .span-regular-file {
    padding-left: 1em;
  }

  button {
    border: 0;
    border-radius: 0.3rem;
    color: #faffff;
    background: #1fa3ec;
    line-height: 2.4rem;
    font-size: 1.2rem;
    width: 100%;
    transition-duration: 0.4s;
    cursor: pointer;
    margin: 5px 0px;
  }
  
  button:hover {
    background: #0e70a4;
  }
  </style>
</head>
<body>
  <a id="return_main_menu" href="./index.htm"><svg height="24px" width="24px" viewBox="0 0 16 16" id="Layer_1" version="1.1" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path fill="white" d="M15.45,7L14,5.551V2c0-0.55-0.45-1-1-1h-1c-0.55,0-1,0.45-1,1v0.553L9,0.555C8.727,0.297,8.477,0,8,0S7.273,0.297,7,0.555  L0.55,7C0.238,7.325,0,7.562,0,8c0,0.563,0.432,1,1,1h1v6c0,0.55,0.45,1,1,1h3v-5c0-0.55,0.45-1,1-1h2c0.55,0,1,0.45,1,1v5h3  c0.55,0,1-0.45,1-1V9h1c0.568,0,1-0.437,1-1C16,7.562,15.762,7.325,15.45,7z"/></svg></a>

  <h3>Deleting files takes awhile. Reload this page to see an updated file list.</h3>
  <form id="delete_form" method="POST" action="delete"></form>
  <div id="container" class="grid-container">
    <div id="checkbox_div"></div>

    <div class="grid-item-button">
      <button id="delete_btn" type="submit" form="delete_form">Queue File(s) For Deletion</button>
    </div>
  </div>

  <script>
  base_url = "";
  if (window.location.protocol == "file:") {
    // makes for easier debugging.
    // if html is loaded locally, can see the results of editing more easily.
    // otherwise every change to html would require uploading new version to microcontroller.
    base_url = "http://smartbutton.local";
  }

  function insert_file_list(responseText) {
    let container = document.getElementById("container");
    let form = document.getElementById("delete_form");
    let insert_point = document.getElementById("insert_file_list_before_here");
    
    let newline = String.fromCharCode(10);
    let tab = String.fromCharCode(9)

    let checkbox_div = document.getElementById("checkbox_div");
    if (responseText != "") {
      let files = responseText.split(newline);
      for (let i in files) {
        if (files[i] != "") {
          let row = document.createElement("div");
          row.classList.add("grid-checkbox-row");
          let checkbox_input = document.createElement("input");
          checkbox_input.setAttribute("type", "checkbox");
          checkbox_input.setAttribute("id", files[i]);
          checkbox_input.setAttribute("name", files[i]);
          checkbox_input.setAttribute("form", "delete_form");
  
          row.appendChild(checkbox_input);

          let label_anchor = document.createElement("a");
  
          let label_text = files[i];
          if (label_text.indexOf(tab) > -1) {
            label_anchor.classList.add("span-regular-file");
            label_href = base_url+encodeURIComponent(label_text.substring(0, label_text.indexOf(tab))).replaceAll("%2F", "/");
            label_anchor.href = label_href;
            //label_text = "├──"+label_text;
            //label_text = "\\___"+label_text;
            label_text = label_text.replace(tab, tab+"(");
            label_text += " bytes)";
          }

          label_anchor.appendChild(document.createTextNode(label_text));

          row.appendChild(label_anchor);
          checkbox_div.appendChild(row);
        }
      }
    }
    else {
      let not_found_div = document.createElement("div");
      not_found_div.innerText = "No files found.";
      not_found_div.style = "color: white; text-align: center; width: 100%;"
      container.insertBefore(not_found_div, insert_point);
    }
    container.style.visibility = "visible"; 
  }

  function pull_file_list() {
    fetch(base_url+"/file_list")
      .then(response => response.text())
      .then(data => insert_file_list(data));
  }

  pull_file_list();

  </script>
</body>
</html>
